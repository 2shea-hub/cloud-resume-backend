name: Deploy Backend (SAM)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Python (same version as AWS Lambda runtime)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      # Install SAM CLI
      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      # Configure AWS credentials (uses GitHub secrets, no profiles)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      # Build backend with SAM
      - name: Build SAM app
        run: sam build

      # Deploy stack
      - name: Deploy SAM app
        run: |
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
            --stack-name sam-app \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --region eu-north-1

      # Get API Gateway URL
      - name: Export API Gateway URL
        id: apigw
        run: |
          url=$(aws cloudformation describe-stacks \
            --stack-name sam-app \
            --query "Stacks[0].Outputs[?OutputKey=='ApiUrl'].OutputValue" \
            --output text)
          echo "api_url=$url" >> $GITHUB_OUTPUT

      # Save API Gateway URL as artifact (so frontend can use it if needed)
      - name: Save API Gateway URL as artifact
        run: echo "${{ steps.apigw.outputs.api_url }}" > api-gateway-url.txt
      - uses: actions/upload-artifact@v4
        with:
          name: api-gateway-url
          path: api-gateway-url.txt
